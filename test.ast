//----------------------------------------------------------------------
//--- minimal testing framework
var testname="";
var errors=0,tests=0;
var suberr=0,subtest=0;
defun start(tn) {
  tests=tests+1;
  testname=tn;
  subtest=0;
  suberr=0;
  prln("--- testing",testname);
}
defun test(actual,expected) {
//   prln(actual,"?=",expected);
  subtest=subtest+1;
  if (expected!=actual) {
    prln("subtest",subtest,"failed : expected",expected,"but got",actual);
    suberr=suberr+1;
  }
}
defun finish() {
  if (suberr) {
    prln("failed",suberr,"of",subtest,"subtests");
    errors=errors+1;
  } else {
    prln(testname,"succeeded all subtests");
  }
  prln();
}
defun summary() {
  prln("*** test summary");
  if (errors) {
    prln(errors,"of",tests,"tests failed!");
  } else {
    prln("All tests succeeded!");
  }
  pr("Total time spent on all tests: ");
  toc();
}
//----------------------------------------------------------------------
//--- fibonacci parameter and expected result
var fib_par=12,fib_res=144;
//var fib_par=35,fib_res=9227465;
//----------------------------------------------------------------------
//--- tests
defun test15() {
  start("structs (anonymous)");
  var struct{string a,int i,float f} x;
  test(tostr(x),"{a='',i=0,f=0}");
  x.a="prlnx";
  test(x.a,"prlnx");
  test(tostr(x),"{a='prlnx',i=0,f=0}");
  x.i=1;
  test(x.i,1);
  x.f=2.0;
  test(tostr(x),"{a='prlnx',i=1,f=2}");
  finish();
}
//----------------------------------------------------------------------
//--- summary
defun main() {
  tic();
  prln();
  prln("-------------------- running test suite now");
  prln();
  test15();
  summary();
}
