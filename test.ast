/*
*** todo
 - do static analysis
 - generate code
 - more on types: type literals (?)
*/
scope foo {
  defun fun(x) return "foo";
};
scope bar {
  defun fun(x) return "bar";
};
prln(foo);
prln(bar);
foo.fun(1);
bar.fun(2);
var h=[0,1,2,3];
h.tostr().typeof().prln();
/*
scope s {
  var i=1;
//  prln("i =",i);
};
scope x {
  var i=2;
  prln("i =",i);
  defun foo(n) {return 2*n;}
};
prln("s =",s);
prln("s.i =",s.i);
var foo=x.foo;
prln("s.foo(2) =",foo(2));
*/
/*
aliastype intarr int[];
prln(intarr);
var intarr ia;
prln(ia);
resize(ia,4);
prln(ia);
for (var int k=0;k<4;k=k+1) {
  prln(k);
  ia[k]=k;
}
prln(ia);
*/
